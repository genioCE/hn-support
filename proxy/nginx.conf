worker_processes  1;

events { worker_connections  1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  # HTTP â†’ HTTPS redirect
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # TLS servers per app (use a wildcard cert for *.hn.local)
  # Zammad
  server {
    listen 443 ssl;
    server_name zammad.hn.local;
    ssl_certificate     /etc/nginx/certs/hn.local.crt;
    ssl_certificate_key /etc/nginx/certs/hn.local.key;

    location / {
      proxy_pass http://zammad:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  # OpenProject
  server {
    listen 443 ssl;
    server_name openproject.hn.local;
    ssl_certificate     /etc/nginx/certs/hn.local.crt;
    ssl_certificate_key /etc/nginx/certs/hn.local.key;

    location / {
      proxy_pass http://openproject:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  # Qdrant
  server {
    listen 443 ssl;
    server_name qdrant.hn.local;
    ssl_certificate     /etc/nginx/certs/hn.local.crt;
    ssl_certificate_key /etc/nginx/certs/hn.local.key;

    location / {
      proxy_pass http://qdrant:6333;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  # vLLM (OpenAI-compatible)
  server {
    listen 443 ssl;
    server_name llm.hn.local;
    ssl_certificate     /etc/nginx/certs/hn.local.crt;
    ssl_certificate_key /etc/nginx/certs/hn.local.key;

    location / {
      proxy_pass http://llm:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  # Bridge
  server {
    listen 443 ssl;
    server_name bridge.hn.local;
    ssl_certificate     /etc/nginx/certs/hn.local.crt;
    ssl_certificate_key /etc/nginx/certs/hn.local.key;

    location / {
      proxy_pass http://bridge:8787;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }
}
